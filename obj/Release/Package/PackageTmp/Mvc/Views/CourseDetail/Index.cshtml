@{
	Layout = "~/MVC/Views/Layouts/_MVCLayout.cshtml";
	Page.Title = "Course Detail";
}

@using Telerik.Sitefinity.DynamicModules.Model
@using Telerik.Sitefinity.Model
@using SitefinityWebApp.Mvc.Models

@model CourseDetailModel

@{
	var courseDetail = Model.CourseDetail;
	var relatedCourses = Model.RelatedCourses;
	var pageName = Page.Title as string;
}

@section Breadcrumb {
	@{ Html.RenderPartial("_Breadcrumb", pageName); }
}

<div class="col-md-9">
	<div class="mu-course-container mu-course-details">
		<div class="row">
			<div class="col-md-12">
				@RenderCourseDetail(Model.CourseDetail)
			</div>
		</div>
	</div>
	@RenderRelatedCourses(relatedCourses)
</div>

@helper RenderCourseOutline(List<DynamicContent> outlines) {
<h4>Course Outline</h4>
<div class="table-responsive">
	<table class="table">
		<thead>
			<tr>
				<th> Title </th>
				<th> Course Time </th>
				<th> Spent Time </th>
				<th> Status </th>
			</tr>
		</thead>
		<tbody>
			@for (var i = 0; i < outlines.Count; i++) {
				var outline = outlines[i];
				<tr>
					<td>@(i + 1). @outline.GetValue("DisplayTitle")</td>
					<td>@outline.GetValue("CourseTime")</td>
					<td>@outline.GetValue("SpentTime")</td>
					<td>@outline.GetValue("CourseStatus")</td>
				</tr>
			}
		</tbody>
	</table>
</div>
}

@helper RenderCourseDetail(DynamicContent courseDetail)
{
	<div class="mu-latest-course-single">
		<figure class="mu-latest-course-img">
			<a href="#"><img src="@courseDetail.GetValue("ImageLink")" alt="img"></a>
			<figcaption class="mu-latest-course-imgcaption">
				<a href="#">@courseDetail.GetValue("Type")</a>
				<span><i class="fa fa-clock-o"></i>@courseDetail.GetValue("Days") Days</span>
			</figcaption>
		</figure>
		<div class="mu-latest-course-single-content">
			<h2><a href="#">@courseDetail.GetValue("DisplayTitle")</a></h2>
			<h4>Course Information</h4>
			<ul>
				<li> <span>Course Price</span> <span>@courseDetail.GetValue("Price")</span></li>
				<li> <span>Place</span> <span>@courseDetail.GetValue("Place")</span></li>
				<li> <span>Total Students</span> <span>@courseDetail.GetValue("TotalStudent")</span></li>
				<li> <span>Course Duration</span> <span>@courseDetail.GetValue("CourseDuration")</span></li>
				<li> <span>Course Start</span> <span>@courseDetail.GetValue("CourseStart")</span></li>
			</ul>
			<h4>Description</h4>
			@Html.Raw(courseDetail.GetValue("LongDescription"))
			@RenderCourseOutline(Model.Outlines)
		</div>
	</div>
}

@helper RenderRelatedCourses(List<DynamicContent> relatedCourses) {
	<div class="row">
		<div class="col-md-12">
			<div class="mu-related-item">
				<h3>Related Courses</h3>
				<div class="mu-related-item-area">
					<div id="mu-related-item-slide">
						@foreach (var course in relatedCourses)
						{
							<div class="col-md-6">
								@{ Html.RenderPartial("_SliderTileCourse", course); }
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	</div>
}